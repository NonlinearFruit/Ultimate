------------------------
Internet -- WinKey -- #
------------------------
#a::    --     Insta-(A)HK

#b::    --     Insta-(B)ible (ESV)

#d::    --     Insta-(D)ictionary

#f::    --     (F)acebook

#g::    --     Insta-(G)oogle

#i::    --     Insta-Google (I)mages

#m::    --     Insta-Google (M)aps

#r::    --     (R)eload

#s::    --     Insta-(S)tackOverFlow

#t::    --     Insta-(T)hesaurus

#u::    --     Insta-(U)RL

#w::    --     Insta-(W)ikipedia

#y::    --     (Y)outube

#y::    --     Insta-(Y)outube

#z::    --     AHK Documentation

------------------------
  Homebrewed Internet
------------------------
#b::    --     (B)itBucket

#d::    --     Google (D)rive 

#e::    --     Google (E)mail

#h::    --     Git(H)ub 

#s::    --     (S)qlFiddle

#v::    --    Vertabelo

--------------------------
Function -- CustomModifier
--------------------------
AppsKey
;---------------------------

GotoUP:    --     Wheel (Up)

Wheel (Up)
		if(GetKeyState("Shift","p"))
		{
			MouseClick, wheelup
		}
		else
		{
			MouseClick, wheelup
		}
		return

GotoDOWN:    --     Wheel (Down)

Wheel (Down)
		if(GetKeyState("Shift","p"))
		{
			MouseClick, wheeldown
		}
		else
		{
			MouseClick, wheeldown
		}
		return

GotoLEFT:    --     Beginning of Line and Beginning of Document

Beginning of Line and Beginning of Document
		if(GetKeyState("Shift","p"))
		{
			Send {CTRL down}{Home}{CTRL up}
		}
		else
		{
			Send {Home}
		}
		return

GotoRIGHT:    --     End of Line and End of Document

End of Line and End of Document
		if(GetKeyState("Shift","p"))
		{
			Send {CTRL down}{End}{CTRL up}
		}
		else
		{
			Send {End}
		}
		return

GotoA:    --     Queuing Paste (a)nnex

Queuing Paste (a)nnex
		pasteData(qClip%qPasteIndex%)	    ; Paste next item in queue
		if (qPasteIndex==qCopyIndex)		; Keep qPaste from passing qCopy
		{
			qPasteIndex := qCopyIndex-1		; If qPaste=qCopy, qPaste--
		}
		else
		{
			qPasteIndex := Mod(qPasteIndex+1,111)	; Increment index normally
		}
		return

GotoC:    --     Incremented (C)opy

# in the incClip with ~
		return

GotoE:    --     (E)ncompass Paste	

(E)ncompass Paste	
		constants := copySelectedData()
		StringSplit, constantArray, constants, `,
		Loop, %constantArray0%
		{
			if(constantArray0==1)
			{
				StringReplace , encClip, encClip, ~, %constantArray1%, All	; Replace ~ with stuff
				break
			}
			temp := constantArray%a_index%
			StringReplace , encClip, encClip, ~%a_index%, %temp%, All	; Replace ~1 and ~2 and ~3 ... with stuff
		}
		pasteData(encClip)
		return

GotoG:    --     Encompass Copy [(G)rap]

Encompass Copy [(G)rap]
		encClip := copySelectedData()
		return

GotoI:    --     (I)dea Saver

(I)dea Saver
		if(GetKeyState("Shift","p"))
		{
			data := copySelectedData()
		}
		else
		{
			InputBox, data, Idea Recorder, Please enter your idea, , 200, 100
		}
		idea = *%data%`n
		fileName = ideasDocument.txt
		fileWriter(idea, fileName)
		return

GotoK:    --    (K)eystroking Copy Paste

!GetKeyState("Shift","p"))
		{ ;Copying
			Run, Notepad KeystrokeCopyPaste.txt
		}
		else
		{ ;Pasting (By typing out)
			msgbox ok
			txt := fileReader("KeystrokeCopyPaste.txt")
			Send %txt%
		}
		return

GotoL:    --     Highlights (L)ine

Highlights (L)ine
	Send {Home}{Home}{Shift down}{End}{Shift up}
	return

GotoO:    --     Make Current Window Transparent (Toggle-ish) [(o)paque]

!transLevel) ; Trans Off
	{
		transLevel = 201
	}
	else if (transLevel>200){
		transLevel = 151
	}
	else if (transLevel>150){
		transLevel = 101
	}
	else if (transLevel>100){
		transLevel = 51
	}
	else
	{
		WinSet, Transparent, OFF, A
		return
	}
	WinSet, Transparent, %transLevel%, A
	return

GotoQ:    --     (Q)ueuing Copy

(Q)ueuing Copy
		qClip%qCopyIndex% := copySelectedData()	; Get the selected data
		qCopyIndex := Mod(qCopyIndex + 1, 111)	; Increment qCopyIndex (111 being the max of the q)
		qClip%qCopyIndex% = 					; Set next qClip to be empty
		return

GotoT:    --     Always On (T)op (Credit to Appskey Guy)

!= "† ")
	      TempText := "† " . TempText ;chr(134)
	}
	else
	{
		WinSet AlwaysOnTop, Off, A
		if(SubStr(TempText, 1, 2) = "† ")
			TempText := SubStr(TempText, 3)
	}
	WinSetTitle, A, , %TempText%
	Return
 
GotoV:    --     Incremented Paste

Incremented Paste
		StringReplace , temp, incClip, ~, %incIndex%	; Replace ~ with index
		incIndex := incIndex + 1			; Increment index
		pasteData(temp)						; Pastes the incClip var with updated index
		return

GotoMINUS:    --     Send Date

!GetKeyState("Shift","p"))
	{ ; Normal Date (w/o +)
		FormatTime, date,, MM/dd/yy
	}
	else
	{ ; Sorting Date (w/ +)
		FormatTime, date,, yy/MM/dd
	}
	pasteData(date)
	return

GotoPLUS:    --     Send Time 

Send Time 
      FormatTime, time,, h:mm tt
      pasteData(time)
      return

GotoENTER:    --     Jump to end of line then hit enter

------------------------
  Homebrewed Function
------------------------
;--------------------------------------
;Homebrewed Functionality - Use CapsLock
;--------------------------------------

; GotoUP: Wheel up

; GotoDOWN: Wheel down

; GotoLEFT: Beginning of line

; GotoRIGHT: End of line

; GotoA: Queuing Paste (a)nnex

; GotoB:

; GotoC: Incremented (C)opy

; GotoD:

; GotoE: (E)ncompass Paste	

; GotoF: 

; GotoG: Encompass Copy (G)rap

; GotoH:

; GotoI: (I)dea Saver

; GotoJ:

; GotoK: (K)eystroking Copy Paste

; GotoL: Highlight (l)ine

; GotoM:

; GotoN:

; GotoO: Make Current Window Transparent [(o)paque]

GotoP:    --     Persisting Copy [(p)ersist]

!GetKeyState("Shift","p"))
        {   ; If Shift not pressed, Copy
            data := copySelectedData()          ; Get selected text
                                                ; Set where to persist text
            fileName = C:\Programming\AHK\Ultimates\Scripts\Ultimatev7.6\persistantCopyPaste.txt    
            fileDeletion(fileName)              ; Delete old text
            fileWriter(data,fileName)           ; Persist new text
        }
        else
        {   ; If Shift pressed, Paste
            data := copySelectedData()          ; Get selected text
                                                ; Set where to persist text
            fileName = C:\Programming\AHK\Ultimates\Scripts\Ultimatev7.6\persistantCopyPaste.txt    
            fileDeletion(fileName)              ; Delete old text
            fileWriter(data,fileName)           ; Persist new text
        }
        return

; GotoQ: (Q)ueuing Copy

; GotoR: 

; GotoS: Persisting Paste (S)alvage

; GotoT: Always On (T)op

; GotoU:
 
; GotoV: Incremented Paste

; GotoW: 

; GotoX: 

; GotoY: 

; GotoZ:

GotoCOMMA:    --    Official Email

Official Email
	data = bmbolen2017@spartans.manchester.edu
    pasteData(data)
    return

GotoPERIOD:    --    Personal Email 

Personal Email 
	data = 1123benji5813@gmail.com
    pasteData(data)
    return  

GotoSLASH:    --    Username

Username
	data = bmbolen2017
    pasteData(data)
    return

GotoSC027:    --    LaGwana Email

LaGwana Email
    data = bolen@lagwana.com
    pasteData(data)
    return
     
GotoOPENBRACKET:    --    Gamer Tag 

Gamer Tag 
	data = NonlinearFruit
    pasteData(data)
    return   

; GotoCLOSEBRACKET:

; GotoBACKSLASH:

; GotoMINUS: Date

; GotoPLUS: Time 

; GotoF1:

GotoF2:    --    Hotkey Summarizer

------------------------
Program -- AltKey -- !
------------------------
!d::    --     Choose (D)irectory

!d::    --     Insta-(D)irectory

!n::    --     Runs Notepad

!Left::    --    Spotify Previous Song 

!Right::    --    Spotify Next Song

!UP::    --    Spotify Pause

!Down::    --    Spotify Info

!PgUP::    --    Spotify Volume Up

!PgDn::    --    Spotify Volume Down

!End::    --     Spotify Mute

------------------------
  Program Homebrewed
------------------------
!c::    --     (C)alculator

!g::    --     (G)it Command Line

!n::    --     (N)etbeans

!p::    --     Cmd (P)rompt

!s::    --     (S)ublime Text 2

!t::    --     (T)ime Card Folder

!u::    --     (U)ltimate Repository Folder

